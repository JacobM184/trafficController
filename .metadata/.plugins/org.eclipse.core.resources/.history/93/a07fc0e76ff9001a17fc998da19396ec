#include <system.h>
#include <stdio.h>
#include <string.h>
#include <altera_avalon_pio_regs.h>
#include "ledLocation.h"

unsigned int detectedNLine = 0;
char sequence[32];

void uart_receiver(FILE *receiver){

	char c = 0;
	int count = 0;
	receiver = fopen(UART_NAME, "r");

	if(receiver != NULL){
		for(;;){

			c = getc(receiver);
			sequence[count] = c;

			if(c == '\n'){
				detectedNLine = 1;
				//printf("NEWLINE:\n");
				break;
			}

			count++;

		}

	}
	fclose(receiver);
}


void timeout_data_handler(FILE *receiver){

	strchr

}


void configurable_tlc(void* timerContext, unsigned int state, FILE *receiver){
	int* timerValue = (int*) timerContext;
	unsigned int checkNew = IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE) & 0x8;

		switch (state)
		{
		case 0:
			// set timer value for next
			*timerValue = 2000;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, GR);
			receivedFlag = 0;
			break;

		case 1:
			// set timer value for next
			*timerValue = 500;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, YR);
			break;

		case 2:
			// set timer value for next
			*timerValue = 6000;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, RR);

			if(receivedFlag == 1){
				break;
			}

			if((receivedFlag == 0)){
				timeout_data_handler(receiver);
			}

			break;

		case 3:
			// set timer value for next
			*timerValue = 2000;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, RG);

			receivedFlag = 0;
			break;

		case 4:
			// set timer value for next
			*timerValue = 500;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, RY);
			break;

		case 5:
			// set timer value for next
			*timerValue = 6000;
			// set current LEDs
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_GREEN_BASE, RR);

			if(receivedFlag == 1){
				break;
			}

			if((receivedFlag == 0)){
				timeout_data_handler(receiver);
			}

			break;
		default:
			break;
		}
}
